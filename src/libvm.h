void libvm_version(vm_t *vm);
void libvm_print(vm_t *vm);
void libvm_printf(vm_t *vm);
void libvm_write(vm_t *vm);
void libvm_println(vm_t *vm);
void libvm_call(vm_t *vm);
void libvm_loadlib(vm_t *vm);
void libvm_push(vm_t *vm);
void libvm_pop(vm_t *vm);
void libvm_drop(vm_t *vm);
void libvm_tcpconnect(vm_t *vm);
void libvm_tcplisten(vm_t *vm);
void libvm_tcpaccept(vm_t *vm);
void libvm_open(vm_t *vm);
void libvm_close(vm_t *vm);
void libvm_readln(vm_t *vm);
void libvm_readpw(vm_t *vm);
void libvm_sleep(vm_t *vm);
void libvm_ret(vm_t *vm);
void libvm_exit(vm_t *vm);
void libvm_dump(vm_t *vm);
void libvm_load(vm_t *vm);
void libvm_add(vm_t *vm);
void libvm_mul(vm_t *vm);
void libvm_div(vm_t *vm);
void libvm_dup(vm_t *vm);
void libvm_swap(vm_t *vm);
void libvm_jp(vm_t *vm);
void libvm_jf(vm_t *vm);
void libvm_jn(vm_t *vm);
void libvm_jz(vm_t *vm);
void libvm_jnz(vm_t *vm);
void libvm_fork(vm_t *vm);
void libvm_system(vm_t *vm);
void libvm_shift(vm_t *vm);
void libvm_int(vm_t *vm);
void libvm_nop(vm_t *vm);
void libvm_cmp(vm_t *vm);
void libvm_neg(vm_t *vm);
void libvm_rmr(vm_t *vm);
void libvm_read(vm_t *vm);
void libvm_getf(vm_t *vm);
void libvm_setf(vm_t *vm);
void libvm_anew(vm_t *vm);
void libvm_anews(vm_t *vm);
void libvm_asz(vm_t *vm);
void libvm_arsz(vm_t *vm);
void libvm_aget(vm_t *vm);
void libvm_aset(vm_t *vm);
